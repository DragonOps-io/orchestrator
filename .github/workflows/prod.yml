name: build-prod
on:
  workflow_dispatch:
  push:
    branches:
      - prod

permissions:
  contents: write
  actions: write
  packages: write

jobs:
  build_and_push:
    name: Build and Push Prod
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.PROD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.PROD_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
      # This is needed for the Dockerfile -- we pull in worker.
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up SSH
        uses: MrSquaare/ssh-setup-action@7bfdda6ef6839504e3a5b2625ad971b17461a0db # v3.0.0
        with:
          host: github.com
          private-key: ${{ secrets.PRIVATE_SSH_KEY_TYPES_REPO }}
          private-key-name: github-ppk

      - name: Get latest tag
        id: gettag
        run: |
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "latest_tag=${latest_tag#v}" >> $GITHUB_ENV

      - name: Get Latest Worker Tag
        id: worker-tag
        run: |
          worker_tag=$(aws ecr describe-images --output json --repository-name dragonops-worker --query 'reverse(sort_by(imageDetails, &imagePushedAt))[:1].imageTags' --no-paginate | jq -r '.[0] | map(select(. | startswith("v"))) | first')
          echo "worker_tag=$worker_tag" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: ${{ steps.login-ecr-public.outputs.registry }}/l2b0q2h2/dragonops-orchestrator:${{ github.sha }},${{ steps.login-ecr-public.outputs.registry }}/l2b0q2h2/dragonops-orchestrator:latest,${{ steps.login-ecr-public.outputs.registry }}/l2b0q2h2/dragonops-orchestrator:v${{ env.latest_tag }}
          file: Dockerfile
          ssh: default
          push: true
          provenance: false
          build-args: WORKER_VERSION=${{ env.worker_tag }}