name: build-preprod
on:
  workflow_dispatch:
  push:
    branches:
      - preprod

permissions:
  contents: read
  id-token: write
  pull-requests: read

jobs:
  build_and_push:
    name: Build and Push Preprod
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.PREPROD_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.PREPROD_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR Public
        id: login-ecr-public
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registry-type: public
      # This is needed for the Dockerfile -- we pull in worker.
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set up SSH
        uses: MrSquaare/ssh-setup-action@7bfdda6ef6839504e3a5b2625ad971b17461a0db # v3.0.0
        with:
          host: github.com
          private-key: ${{ secrets.PRIVATE_SSH_KEY_TYPES_REPO }}
          private-key-name: github-ppk

      - name: Go Build
        run: |
          go env -w GOPRIVATE=github.com/DragonOps-io/*
          git config --global url."git@github.com:".insteadOf "https://github.com/"
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags "-X main.bugSnagDevKey=${{ secrets.BUGSNAG_DEV_KEY}}" -o .

      - name: Get latest tag
        id: gettag
        run: |
          latest_tag=$(git tag --sort=committerdate | tail -1)
          echo $latest_tag
          echo "latest_tag=${latest_tag#v}" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          tags: ${{ steps.login-ecr-public.outputs.registry }}/z0q6p3w2/dragonops-orchestrator:${{ github.sha }},${{ steps.login-ecr-public.outputs.registry }}/z0q6p3w2/dragonops-orchestrator:latest, ${{ steps.login-ecr-public.outputs.registry }}/z0q6p3w2/dragonops-orchestrator:v${{ env.latest_tag }}
          file: preprod.Dockerfile
          ssh: default
          push: true
          provenance: false